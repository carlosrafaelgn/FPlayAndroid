apply plugin: 'com.android.application'

buildscript {
	repositories {
		jcenter()
		google()
	}
	dependencies {
		classpath 'com.android.tools.build:gradle:4.1.3'

		// NOTE: Do not place your application dependencies here; they belong
		// in the individual module build.gradle files
	}
}

allprojects {
	repositories {
		jcenter()
		google()
		flatDir {
			dirs 'libs'
		}
	}
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

	// versionCode must be kept in sync with UI.VERSION_CODE
	// versionName must be kept in sync with UI.VERSION_NAME
	defaultConfig {
		versionCode 126
		versionName "1.92"
	}

	//https://developer.android.com/studio/build/configure-apk-splits
	//https://gist.github.com/ph0b/69586260bc20c58136ef
	splits {
		abi {
			enable true
			reset()
			include 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
			universalApk false //do not generate an additional APK that contains all the ABIs
		}
	}

	//we must generate different version codes for different APK's, or else
	//Play Console will not accept the upload
	project.ext.versionCodes = ['armeabi-v7a': 0, 'arm64-v8a': 1, 'x86': 2, 'x86_64': 3]

	android.applicationVariants.all { variant ->
		variant.outputs.each {
			output -> output.versionCodeOverride = (project.ext.versionCodes.get(output.getFilter(com.android.build.OutputFile.ABI), 0) * 1000000) + android.defaultConfig.versionCode
		}
	}

	flavorDimensions "mode"

	productFlavors {
		traditional {
			dimension "mode"
			applicationId "br.com.carlosrafaelgn.fplay"
			minSdkVersion 10
			targetSdkVersion 30
			buildConfigField 'boolean', 'X', 'false'
		}

		x {
			dimension "mode"
			applicationId "br.com.carlosrafaelgn.fplay.x"
			minSdkVersion 16
			targetSdkVersion 30
			buildConfigField 'boolean', 'X', 'true'
		}
	}

	sourceSets {
		main {
			manifest.srcFile 'AndroidManifest.xml'
			assets.srcDirs = ['assets']
		}

		traditional {
			manifest.srcFile 'AndroidManifestTraditional.xml'
			java.srcDirs = ['src', 'src-traditional']
			resources.srcDirs = ['src', 'src-traditional']
			aidl.srcDirs = ['src', 'src-traditional']
			renderscript.srcDirs = ['src', 'src-traditional']
			res.srcDirs = ['res', 'res-traditional']
			jniLibs.srcDirs = ['libs']
		}

		x {
			java.srcDirs = ['src', 'src-x']
			resources.srcDirs = ['src', 'src-x']
			aidl.srcDirs = ['src', 'src-x']
			renderscript.srcDirs = ['src', 'src-x']
			res.srcDirs = ['res', 'res-x']
			jniLibs.srcDirs = ['libs', 'libs-x']
		}

		// Move the build types to build-types/<type>
		// For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
		// This moves them out of them default location under src/<type>/... which would
		// conflict with src/ being used by the main source set.
		// Adding new build types or product flavors should be accompanied
		// by a similar customization.
		debug.setRoot('build-types/debug')
		release.setRoot('build-types/release')
	}

	buildTypes {
		release {
			minifyEnabled true
			shrinkResources true
			proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-project.txt'
		}
	}
}

dependencies {
	implementation fileTree(include: '*.jar', dir: 'libs')
	implementation 'com.google.code.gson:gson:2.8.5'
	implementation project(':fplay.plugin')
}
